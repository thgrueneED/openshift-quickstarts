apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: tomcat-react
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 9
    labels:
      application: ${APPLICATION_NAME}
      template: jws30-tomcat7-basic-s2i
      xpaas: 1.2.0
    name: ${APPLICATION_NAME}
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      application: ${APPLICATION_NAME}
      template: jws30-tomcat7-basic-s2i
      xpaas: 1.2.0
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
        namespace: 48-thomas-test
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: tomcat-websocket-chat
      git:
        ref: master
        uri: https://github.com/thgrueneED/openshift-quickstarts.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: BUILD_NUMBER
          value: "21"
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-webserver30-tomcat7-openshift:1.2
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/deployment.cancelled: "23"
    creationTimestamp: null
    labels:
      application: ${APPLICATION_NAME}
      template: jws30-tomcat7-basic-s2i
      xpaas: 1.2.0
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: JWS_ADMIN_USERNAME
            value: admin
          - name: JWS_ADMIN_PASSWORD
            value: admin
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - curl -s -u admin:admin 'http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer&att=stateName'
                |grep -iq 'stateName *= *STARTED'
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 60
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
          namespace: 48-thomas-test
      type: ImageChange
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    creationTimestamp: null
    labels:
      application: ${APPLICATION_NAME}
      template: jws30-tomcat7-basic-s2i
      xpaas: 1.2.0
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      application: ${APPLICATION_NAME}
      template: jws30-tomcat7-basic-s2i
      xpaas: 1.2.0
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2016-10-08T05:42:11Z
        status: "True"
        type: Admitted
      routerName: prod-router
parameters:
- name: APPLICATION_NAME
  description: Der Name der WebApp
  required: true
